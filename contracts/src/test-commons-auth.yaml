
jobs:

- name: ErrorsLib
  deploy:
    contract: ErrorsLib.bin

- name: TypeUtilsAPI
  deploy:
    contract: TypeUtilsImpl.bin

- name: ArrayUtilsAPI
  deploy:
    contract: ArrayUtilsImpl.bin

- name: MappingsLib
  deploy:
    contract: MappingsLib.bin
    libraries: TypeUtilsAPI:$TypeUtilsAPI, ArrayUtilsAPI:$ArrayUtilsAPI


##########
# SecureNativeAuthorizations Tests

# - name: SecureNativeAuthorizationsTest
#   deploy:
#     contract: SecureNativeAuthorizationsTest.sol
#     instance: all

# - name: permitSetBase
#   permission:
#     action: setBase
#     target: $SecureNativeAuthorizationsTest
#     permission: setBase
#     value: "true"

# - name: callTestFunctionsSNAT
#   call:
#     destination: $SecureNativeAuthorizationsTest
#     bin: SecureNativeAuthorizationsTest
#     function: testFunctions

# - name: assertTestFunctionsSNAT
#   assert:
#     key: $callTestFunctionsSNAT
#     relation: eq
#     val: success

##########
# ChainAuthorizations Tests

# - name: ChainAuthorizationsTest
#   deploy:
#     contract: ChainAuthorizationsTest.sol
#     instance: all

# - name: callGetTestedContractCAT
#   call:
#     destination: $ChainAuthorizationsTest
#     bin: ChainAuthorizationsTest
#     function: getTestedContract

# - name: permitAddRole
#   permission:
#     action: setBase
#     target: $callGetTestedContractCAT
#     permission: addRole
#     value: "true"

# - name: permitRemoveRole
#   permission:
#     action: setBase
#     target: $callGetTestedContractCAT
#     permission: removeRole
#     value: "true"

# - name: callTestFunctionsCAT
#   call:
#     destination: $ChainAuthorizationsTest
#     bin: ChainAuthorizationsTest
#     function: testFunctions

# - name: assertTestFunctionsCAT
#   assert:
#     key: $callTestFunctionsCAT
#     relation: eq
#     val: success

# ##########
# # AuthorizationsManager Tests

# - name: AuthorizationsManagerTest
#   deploy:
#     contract: AuthorizationsManagerTest.bin
#     instance: AuthorizationsManagerTest
#     libraries: MappingsLib:$MappingsLib

# - name: callGetChainAuthorizations
#   call:
#     destination: $AuthorizationsManagerTest
#     bin: AuthorizationsManagerTest
#     function: getChainAuthorizations

# - name: permitAddRole
#   permission:
#     action: setBase
#     target: $callGetChainAuthorizations
#     permission: addRole
#     value: "true"

# - name: permitRemoveRole
#   permission:
#     action: setBase
#     target: $callGetChainAuthorizations
#     permission: removeRole
#     value: "true"

# - name: callTestFunctionsAMT
#   call:
#     destination: $AuthorizationsManagerTest
#     bin: AuthorizationsManagerTest
#     function: testFunctions

# - name: assertTestFunctionsAMT
#   assert:
#     key: $callTestFunctionsAMT
#     relation: eq
#     val: success


##########
# ParticipantsManager Tests

- name: ParticipantsManagerTest
  deploy:
    contract: ParticipantsManagerTest.bin
    instance: ParticipantsManagerTest
    libraries: ErrorsLib:$ErrorsLib, TypeUtilsAPI:$TypeUtilsAPI, ArrayUtilsAPI:$ArrayUtilsAPI, MappingsLib:$MappingsLib

- name: testUserAccountSecurity
  call:
    destination: $ParticipantsManagerTest
    bin: ParticipantsManagerTest
    function: testUserAccountSecurity

- name: assertUserAccountSecurity
  assert:
    key: $testUserAccountSecurity
    relation: eq
    val: success

- name: testParticipantsManager
  call:
    destination: $ParticipantsManagerTest
    bin: ParticipantsManagerTest
    function: testParticipantsManager

- name: assertParticipantsManager
  assert:
    key: $testParticipantsManager
    relation: eq
    val: success

- name: testOrganizationsManagement
  call:
    destination: $ParticipantsManagerTest
    bin: ParticipantsManagerTest
    function: testOrganizationsManagement

- name: assertOrganizationsManagement
  assert:
    key: $testOrganizationsManagement
    relation: eq
    val: success

- name: testOrganizationAuthorization
  call:
    destination: $ParticipantsManagerTest
    bin: ParticipantsManagerTest
    function: testOrganizationAuthorization

- name: assertOrganizationAuthorization
  assert:
    key: $testOrganizationAuthorization
    relation: eq
    val: success


##########
# Ecosystem Tests

- name: EcosystemTest
  deploy:
    contract: EcosystemTest.bin
    libraries: ErrorsLib:$ErrorsLib,MappingsLib:$MappingsLib

- name: testEcosystemLifecycle
  call:
    destination: $EcosystemTest
    bin: EcosystemTest
    function: testEcosystemLifecycle

- name: assertEcosystemLifecycle
  assert:
    key: $testEcosystemLifecycle
    relation: eq
    val: success

- name: testEcosystemRegistry
  call:
    destination: $EcosystemTest
    bin: EcosystemTest
    function: testEcosystemRegistry

- name: assertEcosystemLifecycle
  assert:
    key: $testEcosystemRegistry
    relation: eq
    val: success
