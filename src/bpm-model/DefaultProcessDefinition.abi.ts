//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultProcessDefinition {
    export function Deploy<Tx>(client: Provider<Tx>, bpm_model_BpmModelLib_sol_BpmModelLib: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, commons_utils_TypeUtilsLib_sol_TypeUtilsLib: string): Promise<string> {
        let bytecode = "$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561218761d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156121e85780820151818401526020810190506121cd565b50505050905090810190601f1680156122155780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561228057600080fd5b505af4158015612294573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff16156122e261d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612343578082015181840152602081019050612328565b50505050905090810190601f1680156123705780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b1580156123be57600080fd5b505af41580156123d2573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561245657602002820191906000526020600020905b815481526020019060010190808311612442575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156124d05780820151818401526020810190506124b5565b50505050905001935050505060206040518083038186803b1580156124f457600080fd5b505af4158015612508573d6000803e3d6000fd5b505050506040513d602081101561251e57600080fd5b810190808051906020019092919050505080156126df57506000600381111561254357fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561257557fe5b146126be57600360000160008481526020019081526020016000206010016003018054806020026020016040519081016040528092919081815260200182805480156125e057602002820191906000526020600020905b8154815260200190600101908083116125cc575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561265a57808201518184015260208101905061263f565b50505050905001935050505060206040518083038186803b15801561267e57600080fd5b505af4158015612692573d6000803e3d6000fd5b505050506040513d60208110156126a857600080fd5b81019080805190602001909291905050506126de565b836003600001600085815260200190815260200160002060020160070154145b5b156126e861d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561274957808201518184015260208101905061272e565b50505050905090810190601f1680156127765780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b1580156127c457600080fd5b505af41580156127d8573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561280d576000600e60006101000a81548160ff0219169083151502179055505b600a600085856040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208152602001908152602001600020600080820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff021916905550506003820160006101000a81549060ff02191690556004820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff0219169055505060078201600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160009055600382016000905560048201600061296f919061d865565b6005820160006101000a81549060ff02191690556005820160016101000a81549060ff02191690555050505082600360000160008681526020019081526020016000206010016002018190555050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff1615612a0e61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612a6f578082015181840152602081019050612a54565b50505050905090810190601f168015612a9c5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015612b0757600080fd5b505af4158015612b1b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff1615612b6961d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612bca578082015181840152602081019050612baf565b50505050905090810190601f168015612bf75780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b158015612c4557600080fd5b505af4158015612c59573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015612cdd57602002820191906000526020600020905b815481526020019060010190808311612cc9575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015612d57578082015181840152602081019050612d3c565b50505050905001935050505060206040518083038186803b158015612d7b57600080fd5b505af4158015612d8f573d6000803e3d6000fd5b505050506040513d6020811015612da557600080fd5b81019080805190602001909291905050508015612f66575060006003811115612dca57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115612dfc57fe5b14612f455760036000016000848152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015612e6757602002820191906000526020600020905b815481526020019060010190808311612e53575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015612ee1578082015181840152602081019050612ec6565b50505050905001935050505060206040518083038186803b158015612f0557600080fd5b505af4158015612f19573d6000803e3d6000fd5b505050506040513d6020811015612f2f57600080fd5b8101908080519060200190929190505050612f65565b836003600001600085815260200190815260200160002060020160070154145b5b15612f6f61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612fd0578082015181840152602081019050612fb5565b50505050905090810190601f168015612ffd5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b15801561304b57600080fd5b505af415801561305f573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef826003600001600086815260200190815260200160002060100160020154146130a661d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156131075780820151818401526020810190506130ec565b50505050905090810190601f1680156131345780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b15801561318257600080fd5b505af4158015613196573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff16156131cb576000600e60006101000a81548160ff0219169083151502179055505b60008b8b604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061320a8a8a8a8a61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156132c757fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a08201518160040190805190602001906133fd92919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600101819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff16156134ed61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561354e578082015181840152602081019050613533565b50505050905090810190601f16801561357b5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b1580156135e657600080fd5b505af41580156135fa573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff161561364861d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156136a957808201518184015260208101905061368e565b50505050905090810190601f1680156136d65780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b15801561372457600080fd5b505af4158015613738573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008581526020019081526020016000206010016004018054806020026020016040519081016040528092919081815260200182805480156137bc57602002820191906000526020600020905b8154815260200190600101908083116137a8575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561383657808201518184015260208101905061381b565b50505050905001935050505060206040518083038186803b15801561385a57600080fd5b505af415801561386e573d6000803e3d6000fd5b505050506040513d602081101561388457600080fd5b81019080805190602001909291905050508015613a455750600060038111156138a957fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660038111156138db57fe5b14613a24576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561394657602002820191906000526020600020905b815481526020019060010190808311613932575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156139c05780820151818401526020810190506139a5565b50505050905001935050505060206040518083038186803b1580156139e457600080fd5b505af41580156139f8573d6000803e3d6000fd5b505050506040513d6020811015613a0e57600080fd5b8101908080519060200190929190505050613a44565b836003600001600085815260200190815260200160002060020160070154145b5b15613a4e61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613aaf578082015181840152602081019050613a94565b50505050905090810190601f168015613adc5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b158015613b2a57600080fd5b505af4158015613b3e573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82600360000160008681526020019081526020016000206010016002015414613b8561d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613be6578082015181840152602081019050613bcb565b50505050905090810190601f168015613c135780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b158015613c6157600080fd5b505af4158015613c75573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615613caa576000600e60006101000a81548160ff0219169083151502179055505b60008b8b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050613ce98a8a8a8a61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115613da657fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190613edc92919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600301819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b600060036000016000838152602001908152602001600020600201600901805490509050919050565b600e60009054906101000a900460ff1615613fda576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff1661402361d5b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614084578082015181840152602081019050614069565b50505050905090810190601f1680156140b15780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f50726f63657373446566696e6974696f6e2e63726561746547617465776179008152506020018481038252602581526020018061ddba602591396040019550505050505060006040518083038186803b15801561411c57600080fd5b505af4158015614130573d6000803e3d6000fd5b50505050600360020182908060018154018082558091505090600182039060005260206000200160009091929091909150555060016003600001600084815260200190815260200160002060010160006101000a81548160ff0219169083600381111561419957fe5b0217905550816003600001600084815260200190815260200160002060100160000181905550806003600001600084815260200190815260200160002060100160010160006101000a81548160ff021916908360028111156141f757fe5b0217905550600160036000016000848152602001908152602001600020602f0160006101000a81548160ff0219169083151502179055505050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b15801561429c57600080fd5b505afa1580156142b0573d6000803e3d6000fd5b505050506040513d60208110156142c657600080fd5b8101908080519060200190929190505050905090565b600060036000016000848152602001908152602001600020600201600a01828154811061430557fe5b906000526020600020505092915050565b600080600080600060036000016000888152602001908152602001600020602f0160009054906101000a900460ff161561440a5785945085935060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b60006003600101828154811061442657fe5b90600052602060002001549050919050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561448461d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156144e55780820151818401526020810190506144ca565b50505050905090810190601f1680156145125780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561457d57600080fd5b505af4158015614591573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff16156145df61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614640578082015181840152602081019050614625565b50505050905090810190601f16801561466d5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b1580156146bb57600080fd5b505af41580156146cf573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561475357602002820191906000526020600020905b81548152602001906001019080831161473f575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156147cd5780820151818401526020810190506147b2565b50505050905001935050505060206040518083038186803b1580156147f157600080fd5b505af4158015614805573d6000803e3d6000fd5b505050506040513d602081101561481b57600080fd5b810190808051906020019092919050505080156149dc57506000600381111561484057fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561487257fe5b146149bb57600360000160008481526020019081526020016000206010016003018054806020026020016040519081016040528092919081815260200182805480156148dd57602002820191906000526020600020905b8154815260200190600101908083116148c9575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561495757808201518184015260208101905061493c565b50505050905001935050505060206040518083038186803b15801561497b57600080fd5b505af415801561498f573d6000803e3d6000fd5b505050506040513d60208110156149a557600080fd5b81019080805190602001909291905050506149db565b836003600001600085815260200190815260200160002060020160070154145b5b156149e561d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614a46578082015181840152602081019050614a2b565b50505050905090810190601f168015614a735780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b158015614ac157600080fd5b505af4158015614ad5573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82600360000160008681526020019081526020016000206010016002015414614b1c61d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614b7d578082015181840152602081019050614b62565b50505050905090810190601f168015614baa5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b158015614bf857600080fd5b505af4158015614c0c573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615614c41576000600e60006101000a81548160ff0219169083151502179055505b60008b8b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050614c808a8a8a8a61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115614d3d57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190614e7392919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a600083815260200190815260200160002060070160050160006101000a81548160ff0219169083151502179055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b606060036000016000838152602001908152602001600020600201600901805480602002602001604051908101604052809291908181526020018280548015614f9257602002820191906000526020600020905b815481526020019060010190808311614f7e575b50505050509050919050565b6000806000806003600001600086815260200190815260200160002060150160010160009054906101000a900460ff1693506003600001600086815260200190815260200160002060150160010160019054906101000a900460ff16925060036000016000868152602001908152602001600020601501600b0154915060036000016000868152602001908152602001600020601501600c015490509193509193565b6000806000600860000160006008600101868154811061505d57fe5b9060005260206000200154815260200190815260200160002060010190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508060010154915050915091565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff16156150fb61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561515c578082015181840152602081019050615141565b50505050905090810190601f1680156151895780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b1580156151f457600080fd5b505af4158015615208573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff161561525661d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156152b757808201518184015260208101905061529c565b50505050905090810190601f1680156152e45780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b15801561533257600080fd5b505af4158015615346573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008581526020019081526020016000206010016004018054806020026020016040519081016040528092919081815260200182805480156153ca57602002820191906000526020600020905b8154815260200190600101908083116153b6575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015615444578082015181840152602081019050615429565b50505050905001935050505060206040518083038186803b15801561546857600080fd5b505af415801561547c573d6000803e3d6000fd5b505050506040513d602081101561549257600080fd5b810190808051906020019092919050505080156156535750600060038111156154b757fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660038111156154e957fe5b14615632576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561555457602002820191906000526020600020905b815481526020019060010190808311615540575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156155ce5780820151818401526020810190506155b3565b50505050905001935050505060206040518083038186803b1580156155f257600080fd5b505af4158015615606573d6000803e3d6000fd5b505050506040513d602081101561561c57600080fd5b8101908080519060200190929190505050615652565b836003600001600085815260200190815260200160002060020160070154145b5b1561565c61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156156bd5780820151818401526020810190506156a2565b50505050905090810190601f1680156156ea5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b15801561573857600080fd5b505af415801561574c573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461579361d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156157f45780820151818401526020810190506157d9565b50505050905090810190601f1680156158215780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b15801561586f57600080fd5b505af4158015615883573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff16156158b8576000600e60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506158f78a8a8a8a61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156159b457fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190615aea92919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600201819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60008084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600a600082815260200190815260200160002060000160020160149054906101000a900460ff1615615cc857600a600082815260200190815260200160002073__$d688d3e5094c429bbf767db5b46e89d18f$__63ec4601549091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015615c8557600080fd5b505af4158015615c99573d6000803e3d6000fd5b505050506040513d6020811015615caf57600080fd5b8101908080519060200190929190505050915050615cce565b60019150505b9392505050565b60008060006003600001600085815260200190815260200160002060220160010160009054906101000a900460ff1692506003600001600085815260200190815260200160002060220160010160019054906101000a900460ff16915060036000016000858152602001908152602001600020602201600b015490509193909250565b60006001600060038110615d6857fe5b602091828204019190069054906101000a900460ff16905090565b6000600e60009054906101000a900460ff1615615db6576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008e8152602001908152602001600020602f0160009054906101000a900460ff161580615e40575060006003811115615e0b57fe5b600360000160008f815260200190815260200160002060010160009054906101000a900460ff166003811115615e3d57fe5b14155b615e4861d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615ea9578082015181840152602081019050615e8e565b50505050905090810190601f168015615ed65780820380516001836020036101000a031916815260200191505b508481038352602981526020018061df65602991396040018481038252608881526020018061de476088913960a0019550505050505060006040518083038186803b158015615f2457600080fd5b505af4158015615f38573d6000803e3d6000fd5b505050508a8a604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff16615fb661d5b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616017578082015181840152602081019050615ffc565b50505050905090810190601f1680156160445780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e324602291396040018481038252605681526020018061e045605691396060019550505050505060006040518083038186803b15801561609257600080fd5b505af41580156160a6573d6000803e3d6000fd5b505050506003600401819080600181540180825580915050906001820390600052602060002001600090919290919091505550600380600001600083815260200190815260200160002060010160006101000a81548160ff0219169083600381111561610e57fe5b0217905550896003600001600083815260200190815260200160002060220160000181905550886003600001600083815260200190815260200160002060220160010160006101000a81548160ff0219169083600181111561616c57fe5b0217905550876003600001600083815260200190815260200160002060220160010160016101000a81548160ff021916908360018111156161a957fe5b02179055506000841180156161d45750600060018111156161c657fe5b8960018111156161d257fe5b145b156162025783600360000160008381526020019081526020016000206022016005016002018190555061630b565b60008383905011801561622a575060018081111561621c57fe5b89600181111561622857fe5b145b1561626357828260036000016000848152602001908152602001600020602201600501600401919061625d92919061d92d565b5061630a565b866003600001600083815260200190815260200160002060220160020160000181905550856003600001600083815260200190815260200160002060220160020160010181905550846003600001600083815260200190815260200160002060220160020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b600360000160008c8152602001908152602001600020600201600d01819080600181540180825580915050906001820390600052602060002001600090919290919091505550600160036000016000838152602001908152602001600020602f0160006101000a81548160ff0219169083151502179055509a9950505050505050505050565b6000806060600360000160008581526020019081526020016000206002016007015492506003600001600085815260200190815260200160002060020160080154915060036000016000858152602001908152602001600020600201600d0180548060200260200160405190810160405280929190818152602001828054801561643a57602002820191906000526020600020905b815481526020019060010190808311616426575b505050505090509193909250565b600061653d60016003806020026040519081016040528092919082600380156164ac576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116164755790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156164f757600080fd5b505afa15801561650b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561653057600080fd5b810190809190505061d5f6565b9050919050565b6000600b54905090565b6000806000600e60006101000a81548160ff0219169083151502179055506000600d8190555061657c61d9ad565b60008090505b6003600101805490508110156169325760036000016000600360010183815481106165a957fe5b90600052602060002001548152602001908152602001600020600201604051806101c0016040529081600082015481526020016001820160009054906101000a900460ff1660018111156165f957fe5b600181111561660457fe5b81526020016001820160019054906101000a900460ff16600381111561662657fe5b600381111561663157fe5b81526020016001820160029054906101000a900460ff16600281111561665357fe5b600281111561665e57fe5b8152602001600282015481526020016003820160009054906101000a900460ff1615151515815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820180548060200260200160405190810160405280929190818152602001828054801561670857602002820191906000526020600020905b8154815260200190600101908083116166f4575b50505050508152602001600a820180548060200260200160405190810160405280929190818152602001828054801561676057602002820191906000526020600020905b81548152602001906001019080831161674c575b50505050508152602001600d82018054806020026020016040519081016040528092919081815260200182805480156167b857602002820191906000526020600020905b8154815260200190600101908083116167a4575b505050505081525050915081610120015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561681957600080fd5b505af415801561682d573d6000803e3d6000fd5b505050506040513d602081101561684357600080fd5b81019080805190602001909291905050501561692557600d5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156168ac57600080fd5b505af41580156168c0573d6000803e3d6000fd5b505050506040513d60208110156168d657600080fd5b81019080805190602001909291905050506169195760007f6475706c69636174652073746172742061637469766974696573000000000000935093505050617090565b8160000151600d819055505b8080600101915050616582565b600d5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561698557600080fd5b505af4158015616999573d6000803e3d6000fd5b505050506040513d60208110156169af57600080fd5b8101908080519060200190929190505050156169f35760007f6e6f207374617274206163746976697479000000000000000000000000000000935093505050617090565b6169fb61da54565b600091505b6003800180549050821015616e725760036000016000600380018481548110616a2557fe5b906000526020600020015481526020019081526020016000206015016040518060e0016040529081600082015481526020016001820160009054906101000a900460ff166001811115616a7457fe5b6001811115616a7f57fe5b81526020016001820160019054906101000a900460ff166001811115616aa157fe5b6001811115616aac57fe5b815260200160028201604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015616beb5780601f10616bc057610100808354040283529160200191616beb565b820191906000526020600020905b815481529060010190602001808311616bce57829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16151515158152505081526020016008820160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1615151515815250508152602001600b8201548152602001600c8201548152505090508060a0015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015616d3257600080fd5b505af4158015616d46573d6000803e3d6000fd5b505050506040513d6020811015616d5c57600080fd5b810190808051906020019092919050505015616da15760007f696e7465726d2e206576656e7420772f6f7574207072656465636573736f720094509450505050617090565b8060c0015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015616df657600080fd5b505af4158015616e0a573d6000803e3d6000fd5b505050506040513d6020811015616e2057600080fd5b810190808051906020019092919050505015616e655760007f696e7465726d2e206576656e7420772f6f757420737563636573736f7200000094509450505050617090565b8180600101925050616a00565b616e7a61dabc565b600092505b600360020180549050831015617049576003600001600060036002018581548110616ea657fe5b906000526020600020015481526020019081526020016000206010016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166002811115616ef557fe5b6002811115616f0057fe5b81526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020018280548015616f5d57602002820191906000526020600020905b815481526020019060010190808311616f49575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015616fb557602002820191906000526020600020905b815481526020019060010190808311616fa1575b505050505081525050905060008160600151511415616ffe5760007f756e726561636861626c652067617465776179000000000000000000000000009550955050505050617090565b6000816080015151141561703c5760007f6761746577617920776974686f7574206f7574707574730000000000000000009550955050505050617090565b8280600101935050616e7f565b6001600e60006101000a81548160ff02191690831515021790555060017f6d6f64656c2076616c696400000000000000000000000000000000000000000095509550505050505b9091565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900460ff166170c661d6a9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561712757808201518184015260208101905061710c565b50505050905090810190601f1680156171545780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061dd90602a91396040018481038252602981526020018061de1e602991396040019550505050505060006040518083038186803b1580156171a257600080fd5b505af41580156171b6573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600084146171e061d6e6565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617241578082015181840152602081019050617226565b50505050905090810190601f16801561726e5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600b8152602001807f5f6964206973204e554c4c0000000000000000000000000000000000000000008152506020019550505050505060006040518083038186803b1580156172f657600080fd5b505af415801561730a573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461736061d6e6565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156173c15780820151818401526020810190506173a6565b50505050905090810190601f1680156173ee5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600e8152602001807f5f6d6f64656c206973204e554c4c0000000000000000000000000000000000008152506020019550505050505060006040518083038186803b15801561747657600080fd5b505af415801561748a573d6000803e3d6000fd5b5050505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600b8190555080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f38d94abeb96a84ab50e93c24191394bf293459aed56a464639dfa03acdaba44530846000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b1580156175c557600080fd5b505afa1580156175d9573d6000803e3d6000fd5b505050506040513d60208110156175ef57600080fd5b810190808051906020019092919050505086604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a26001600260006101000a81548160ff0219169083151502179055505050565b7f414e3a2f2f646174612d6d617070696e6773000000000000000000000000000081565b6000600e60009054906101000a900460ff1615617700576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000868152602001908152602001600020602f0160009054906101000a900460ff161561774a61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156177ab578082015181840152602081019050617790565b50505050905090810190601f1680156177d85780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252601e8152602001807f736f7572636520677261706820656c656d656e74206e6f7420666f756e6400008152506020019550505050505060006040518083038186803b15801561784357600080fd5b505af4158015617857573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff16156178a561d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156179065780820151818401526020810190506178eb565b50505050905090810190601f1680156179335780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252601e8152602001807f74617267657420677261706820656c656d656e74206e6f7420666f756e6400008152506020019550505050505060006040518083038186803b15801561799e57600080fd5b505af41580156179b2573d6000803e3d6000fd5b50505050600060038111156179c357fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660038111156179f557fe5b1415617b585773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000878152602001908152602001600020600201600801541415617a3e61d723565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617a9f578082015181840152602081019050617a84565b50505050905090810190601f168015617acc5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252603d81526020018061e09b603d91396040019550505050505060006040518083038186803b158015617b1a57600080fd5b505af4158015617b2e573d6000803e3d6000fd5b505050508160036000016000858152602001908152602001600020600201600801819055506182ff565b60026003811115617b6557fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115617b9757fe5b1415617cfa5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000878152602001908152602001600020601501600c01541415617be061d723565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617c41578082015181840152602081019050617c26565b50505050905090810190601f168015617c6e5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252604781526020018061df8e604791396060019550505050505060006040518083038186803b158015617cbc57600080fd5b505af4158015617cd0573d6000803e3d6000fd5b505050508160036000016000858152602001908152602001600020601501600c01819055506182fe565b600380811115617d0657fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115617d3857fe5b1415617e9b5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000878152602001908152602001600020602201600b01541415617d8161d723565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617de2578082015181840152602081019050617dc7565b50505050905090810190601f168015617e0f5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252604281526020018061e2e2604291396060019550505050505060006040518083038186803b158015617e5d57600080fd5b505af4158015617e71573d6000803e3d6000fd5b505050508160036000016000858152602001908152602001600020602201600b01819055506182fd565b60016003811115617ea857fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115617eda57fe5b141561806f5760036000016000848152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015617f4657602002820191906000526020600020905b815481526020019060010190808311617f32575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015617fc0578082015181840152602081019050617fa5565b50505050905001935050505060206040518083038186803b158015617fe457600080fd5b505af4158015617ff8573d6000803e3d6000fd5b505050506040513d602081101561800e57600080fd5b810190808051906020019092919050505061806a57600360000160008481526020019081526020016000206010016004018290806001815401808255809150509060018203906000526020600020016000909192909190915055505b6182fc565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961809161d760565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156180e85780820151818401526020810190506180cd565b50505050905090810190601f1680156181155780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252604081526020018061e0056040913960400194505050505060006040518083038186803b15801561816257600080fd5b505af4158015618176573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156181a057600080fd5b81019080805160405193929190846401000000008211156181c057600080fd5b838201915060208201858111156181d657600080fd5b82518660018202830111640100000000821117156181f357600080fd5b8083526020830192505050908051906020019080838360005b8381101561822757808201518184015260208101905061820c565b50505050905090810190601f1680156182545780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156182c15780820151818401526020810190506182a6565b50505050905090810190601f1680156182ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b5b5b6000600381111561830c57fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff16600381111561833e57fe5b14156184a15773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60006003600001600086815260200190815260200160002060020160070154141561838761d723565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156183e85780820151818401526020810190506183cd565b50505050905090810190601f1680156184155780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252603f81526020018061dddf603f91396040019550505050505060006040518083038186803b15801561846357600080fd5b505af4158015618477573d6000803e3d6000fd5b50505050826003600001600084815260200190815260200160002060020160070181905550618aa6565b600260038111156184ae57fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff1660038111156184e057fe5b14156186435773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000868152602001908152602001600020601501600b0154141561852961d723565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561858a57808201518184015260208101905061856f565b50505050905090810190601f1680156185b75780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252604981526020018061decf604991396060019550505050505060006040518083038186803b15801561860557600080fd5b505af4158015618619573d6000803e3d6000fd5b505050508260036000016000848152602001908152602001600020601501600b0181905550618aa5565b6001600381111561865057fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff16600381111561868257fe5b141561881757600360000160008381526020019081526020016000206010016003018054806020026020016040519081016040528092919081815260200182805480156186ee57602002820191906000526020600020905b8154815260200190600101908083116186da575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561876857808201518184015260208101905061874d565b50505050905001935050505060206040518083038186803b15801561878c57600080fd5b505af41580156187a0573d6000803e3d6000fd5b505050506040513d60208110156187b657600080fd5b810190808051906020019092919050505061881257600360000160008381526020019081526020016000206010016003018390806001815401808255809150509060018203906000526020600020016000909192909190915055505b618aa4565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961883961d760565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618890578082015181840152602081019050618875565b50505050905090810190601f1680156188bd5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061df18602291396040018481038252604081526020018061e2a26040913960400194505050505060006040518083038186803b15801561890a57600080fd5b505af415801561891e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561894857600080fd5b810190808051604051939291908464010000000082111561896857600080fd5b8382019150602082018581111561897e57600080fd5b825186600182028301116401000000008211171561899b57600080fd5b8083526020830192505050908051906020019080838360005b838110156189cf5780820151818401526020810190506189b4565b50505050905090810190601f1680156189fc5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015618a69578082015181840152602081019050618a4e565b50505050905090810190601f168015618a965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b5b618aae61d79d565b905092915050565b618abe61dafc565b6001600380602002604051908101604052809291908260038015618b1d576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411618ae65790505b5050505050905090565b600060018060038110618b3657fe5b602091828204019190069054906101000a900460ff16905090565b600080600080600080600080600360000160008a8152602001908152602001600020602f0160009054906101000a900460ff1615618cd757600360000160008a815260200190815260200160002060020160010160009054906101000a900460ff166001811115618bbe57fe5b9750600360000160008a815260200190815260200160002060020160010160019054906101000a900460ff166003811115618bf557fe5b9650600360000160008a815260200190815260200160002060020160010160029054906101000a900460ff166002811115618c2c57fe5b9550600360000160008a8152602001908152602001600020600201600201549450600360000160008a815260200190815260200160002060020160030160009054906101000a900460ff169350600360000160008a8152602001908152602001600020600201600401549250600360000160008a8152602001908152602001600020600201600501549150600360000160008a81526020019081526020016000206002016006015490505b919395975091939597565b6000600860000160008484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060030160009054906101000a900460ff16905092915050565b6000618ddf6001600380602002604051908101604052809291908260038015618dd4576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411618d9d5790505b50505050508361d5f6565b9050919050565b60608060008060036000016000868152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015618e5257602002820191906000526020600020905b815481526020019060010190808311618e3e575b5050505050935060036000016000868152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015618ebf57602002820191906000526020600020905b815481526020019060010190808311618eab575b505050505092506003600001600086815260200190815260200160002060100160010160009054906101000a900460ff169150600360000160008681526020019081526020016000206010016002015490509193509193565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600e60009054906101000a900460ff1615618f73576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008a8152602001908152602001600020602f0160009054906101000a900460ff168015618ffb5750600380811115618fc757fe5b600360000160008b815260200190815260200160002060010160009054906101000a900460ff166003811115618ff957fe5b145b1561900461d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561906557808201518184015260208101905061904a565b50505050905090810190601f1680156190925780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061e167602f91396040018481038252608e81526020018061e196608e913960a0019550505050505060006040518083038186803b1580156190e057600080fd5b505af41580156190f4573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8773__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561916357600080fd5b505af4158015619177573d6000803e3d6000fd5b505050506040513d602081101561918d57600080fd5b810190808051906020019092919050505080156191d65750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b6191de61d760565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561923f578082015181840152602081019050619224565b50505050905090810190601f16801561926c5780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061e167602f91396040018481038252606581526020018061e0d8606591396080019550505050505060006040518083038186803b1580156192ba57600080fd5b505af41580156192ce573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600084849050146192fb61d6e6565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561935c578082015181840152602081019050619341565b50505050905090810190601f1680156193895780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061e167602f91396040018481038252602b81526020018061df3a602b91396040019550505050505060006040518083038186803b1580156193d757600080fd5b505af41580156193eb573d6000803e3d6000fd5b505050506193f761db1e565b868160000151600001818152505085816000015160200181815250508481600001516040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505060036000016000898152602001908152602001600020602201600c018190806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160030160146101000a81548163ffffffff021916908360e01c02179055505050505050505050505050565b878773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561969261d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156196f35780820151818401526020810190506196d8565b50505050905090810190601f1680156197205780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561978b57600080fd5b505af415801561979f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff16156197ed61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561984e578082015181840152602081019050619833565b50505050905090810190601f16801561987b5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b1580156198c957600080fd5b505af41580156198dd573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561996157602002820191906000526020600020905b81548152602001906001019080831161994d575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156199db5780820151818401526020810190506199c0565b50505050905001935050505060206040518083038186803b1580156199ff57600080fd5b505af4158015619a13573d6000803e3d6000fd5b505050506040513d6020811015619a2957600080fd5b81019080805190602001909291905050508015619bea575060006003811115619a4e57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115619a8057fe5b14619bc95760036000016000848152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015619aeb57602002820191906000526020600020905b815481526020019060010190808311619ad7575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015619b65578082015181840152602081019050619b4a565b50505050905001935050505060206040518083038186803b158015619b8957600080fd5b505af4158015619b9d573d6000803e3d6000fd5b505050506040513d6020811015619bb357600080fd5b8101908080519060200190929190505050619be9565b836003600001600085815260200190815260200160002060020160070154145b5b15619bf361d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619c54578082015181840152602081019050619c39565b50505050905090810190601f168015619c815780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b158015619ccf57600080fd5b505af4158015619ce3573d6000803e3d6000fd5b50505050898973__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82600360000160008681526020019081526020016000206010016002015414619d2a61d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619d8b578082015181840152602081019050619d70565b50505050905090810190601f168015619db85780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b158015619e0657600080fd5b505af4158015619e1a573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615619e4f576000600e60006101000a81548160ff0219169083151502179055505b60008c8c6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050619e8e8b8b8b8b61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115619f4b57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061a08192919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff02191690831515021790555050509050508686600a6000848152602001908152602001600020600701600401919061a0ef92919061d92d565b506001600a600083815260200190815260200160002060070160050160016101000a81548160ff02191690831515021790555050505050505050505050505050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561a17d61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a1de57808201518184015260208101905061a1c3565b50505050905090810190601f16801561a20b5780820380516001836020036101000a031916815260200191505b50848103835260208152602001807f50726f63657373446566696e6974696f6e2e676574456c656d656e74547970658152506020018481038252602581526020018061e27d602591396040019550505050505060006040518083038186803b15801561a27657600080fd5b505af415801561a28a573d6000803e3d6000fd5b505050506003600001600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b7f414e3a2f2f74696d65722d6576656e742d646566696e6974696f6e730000000081565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000016000838152602001908152602001600020600201600a01805490509050919050565b7f414e3a2f2f61637469766974792d646566696e6974696f6e730000000000000081565b6000600860010180549050905090565b888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561a3b361d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a41457808201518184015260208101905061a3f9565b50505050905090810190601f16801561a4415780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561a4ac57600080fd5b505af415801561a4c0573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff161561a50e61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a56f57808201518184015260208101905061a554565b50505050905090810190601f16801561a59c5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b15801561a5ea57600080fd5b505af415801561a5fe573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561a68257602002820191906000526020600020905b81548152602001906001019080831161a66e575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561a6fc57808201518184015260208101905061a6e1565b50505050905001935050505060206040518083038186803b15801561a72057600080fd5b505af415801561a734573d6000803e3d6000fd5b505050506040513d602081101561a74a57600080fd5b8101908080519060200190929190505050801561a90b57506000600381111561a76f57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561a7a157fe5b1461a8ea576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561a80c57602002820191906000526020600020905b81548152602001906001019080831161a7f8575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561a88657808201518184015260208101905061a86b565b50505050905001935050505060206040518083038186803b15801561a8aa57600080fd5b505af415801561a8be573d6000803e3d6000fd5b505050506040513d602081101561a8d457600080fd5b810190808051906020019092919050505061a90a565b836003600001600085815260200190815260200160002060020160070154145b5b1561a91461d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a97557808201518184015260208101905061a95a565b50505050905090810190601f16801561a9a25780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b15801561a9f057600080fd5b505af415801561aa04573d6000803e3d6000fd5b505050508a8a73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461aa4b61d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561aaac57808201518184015260208101905061aa91565b50505050905090810190601f16801561aad95780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b15801561ab2757600080fd5b505af415801561ab3b573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561ab70576000600e60006101000a81548160ff0219169083151502179055505b60008d8d604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061abaf8c8c8c8c61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561ac6c57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061ada292919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505087600a60008381526020019081526020016000206004016000018190555086600a60008381526020019081526020016000206004016001018190555085600a600083815260200190815260200160002060040160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a600083815260200190815260200160002060040160020160146101000a81548160ff0219169083151502179055505050505050505050505050505050565b7f414e3a2f2f70726f636573732d646566696e6974696f6e73000000000000000081565b6000600e60009054906101000a900460ff16905090565b6000600e60009054906101000a900460ff161561af2c576000600e60006101000a81548160ff0219169083151502179055505b600360000160008b8152602001908152602001600020602f0160009054906101000a900460ff161561af675761af6061d7a6565b905061b453565b8573__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561afb857600080fd5b505af415801561afcc573d6000803e3d6000fd5b505050506040513d602081101561afe257600080fd5b810190808051906020019092919050505061b0ea57600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166358f2a46d876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561b06a57600080fd5b505afa15801561b07e573d6000803e3d6000fd5b505050506040513d602081101561b09457600080fd5b810190808051906020019092919050505061b0b85761b0b161d7b0565b905061b453565b6001600381111561b0c557fe5b88600381111561b0d157fe5b1461b0e55761b0de61d7ba565b905061b453565b61b119565b6001600381111561b0f757fe5b88600381111561b10357fe5b141561b1185761b11161d7c4565b905061b453565b5b60036001018a90806001815401808255809150509060018203906000526020600020016000909192909190915055506000600360000160008c815260200190815260200160002060010160006101000a81548160ff0219169083600381111561b17e57fe5b021790555089600360000160008c81526020019081526020016000206002016000018190555088600360000160008c815260200190815260200160002060020160010160006101000a81548160ff0219169083600181111561b1dc57fe5b021790555087600360000160008c815260200190815260200160002060020160010160016101000a81548160ff0219169083600381111561b21957fe5b021790555086600360000160008c815260200190815260200160002060020160010160026101000a81548160ff0219169083600281111561b25657fe5b021790555085600360000160008c81526020019081526020016000206002016002018190555084600360000160008c815260200190815260200160002060020160030160006101000a81548160ff02191690831515021790555083600360000160008c81526020019081526020016000206002016004018190555082600360000160008c81526020019081526020016000206002016005018190555081600360000160008c8152602001908152602001600020600201600601819055506001600360000160008c8152602001908152602001600020602f0160006101000a81548160ff0219169083151502179055507f414e3a2f2f61637469766974792d646566696e6974696f6e73000000000000007f8535517f68417fecb5815fc8ee689d6176b52551602cd478f4869fa464105d4e308c8c600181111561b39557fe5b8c600381111561b3a157fe5b8c600281111561b3ad57fe5b8c8c8c8c8c604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff168152602001868152602001851515151581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a261b45061d79d565b90505b9998505050505050505050565b600e60009054906101000a900460ff161561b491576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000898152602001908152602001600020602f0160009054906101000a900460ff16801561b51a57506000600381111561b4e657fe5b600360000160008a815260200190815260200160002060010160009054906101000a900460ff16600381111561b51857fe5b145b1561b52361d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561b58457808201518184015260208101905061b569565b50505050905090810190601f16801561b5b15780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061e13d602a91396040018481038252608681526020018061dd0a6086913960a0019550505050505060006040518083038186803b15801561b5ff57600080fd5b505af415801561b613573d6000803e3d6000fd5b505050506000600181111561b62457fe5b85600181111561b63057fe5b141561b7a95760036000016000878152602001908152602001600020600201600b01600085815260200190815260200160002060020160149054906101000a900460ff1661b6bf57600360000160008781526020019081526020016000206002016009018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600b016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555090505061b937565b60018081111561b7b557fe5b85600181111561b7c157fe5b141561b9365760036000016000878152602001908152602001600020600201600c01600085815260200190815260200160002060020160149054906101000a900460ff1661b8505760036000016000878152602001908152602001600020600201600a018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600c016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b5b7f414e3a2f2f646174612d6d617070696e677300000000000000000000000000007f8f625bb1b0890f994d35093a4593a61e7d37802f8f6e6d454c6826fbd517067e3088878787878c600181111561b98b57fe5b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200197505050505050505060405180910390a2505050505050565b600e60009054906101000a900460ff161561ba5b576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008c8152602001908152602001600020602f0160009054906101000a900460ff1661baa461d5b9565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561bb0557808201518184015260208101905061baea565b50505050905090810190601f16801561bb325780820380516001836020036101000a031916815260200191505b508481038352602981526020018061e224602991396040018481038252602581526020018061ddba602591396040019550505050505060006040518083038186803b15801561bb8057600080fd5b505af415801561bb94573d6000803e3d6000fd5b50505050600380018990806001815401808255809150509060018203906000526020600020016000909192909190915055506002600360000160008b815260200190815260200160002060010160006101000a81548160ff0219169083600381111561bbfc57fe5b021790555088600360000160008b81526020019081526020016000206015016000018190555087600360000160008b815260200190815260200160002060150160010160006101000a81548160ff0219169083600181111561bc5a57fe5b02179055506000600181111561bc6c57fe5b88600181111561bc7857fe5b148061bc99575060018081111561bc8b57fe5b88600181111561bc9757fe5b145b1561bce1576000600360000160008b815260200190815260200160002060150160010160016101000a81548160ff0219169083600181111561bcd757fe5b021790555061bd1f565b86600360000160008b815260200190815260200160002060150160010160016101000a81548160ff0219169083600181111561bd1957fe5b02179055505b60008311801561bd4557506000600181111561bd3757fe5b88600181111561bd4357fe5b145b1561bd735782600360000160008b81526020019081526020016000206015016002016002018190555061be7c565b60008282905011801561bd9b575060018081111561bd8d57fe5b88600181111561bd9957fe5b145b1561bdd4578181600360000160008c8152602001908152602001600020601501600201600401919061bdce92919061d92d565b5061be7b565b85600360000160008b81526020019081526020016000206015016008016000018190555084600360000160008b81526020019081526020016000206015016008016001018190555083600360000160008b815260200190815260200160002060150160080160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6001600360000160008b8152602001908152602001600020602f0160006101000a81548160ff0219169083151502179055507f414e3a2f2f74696d65722d6576656e742d646566696e6974696f6e73000000007f373699118ef3b5136d32d64ff74b16d01d09bdbaec47ab2a36b873425481b0ab308b8b600181111561befe57fe5b8b600181111561bf0a57fe5b8b8b8b8b8b8b604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018960ff1660ff1681526020018860ff1660ff1681526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509b50505050505050505050505060405180910390a2505050505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020602f0160009054906101000a900460ff161561c04361d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c0a457808201518184015260208101905061c089565b50505050905090810190601f16801561c0d15780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561c13c57600080fd5b505af415801561c150573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000848152602001908152602001600020602f0160009054906101000a900460ff161561c19e61d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c1ff57808201518184015260208101905061c1e4565b50505050905090810190601f16801561c22c5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603481526020018061dcd6603491396040019550505050505060006040518083038186803b15801561c27a57600080fd5b505af415801561c28e573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561c31257602002820191906000526020600020905b81548152602001906001019080831161c2fe575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561c38c57808201518184015260208101905061c371565b50505050905001935050505060206040518083038186803b15801561c3b057600080fd5b505af415801561c3c4573d6000803e3d6000fd5b505050506040513d602081101561c3da57600080fd5b8101908080519060200190929190505050801561c59b57506000600381111561c3ff57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561c43157fe5b1461c57a576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561c49c57602002820191906000526020600020905b81548152602001906001019080831161c488575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561c51657808201518184015260208101905061c4fb565b50505050905001935050505060206040518083038186803b15801561c53a57600080fd5b505af415801561c54e573d6000803e3d6000fd5b505050506040513d602081101561c56457600080fd5b810190808051906020019092919050505061c59a565b836003600001600085815260200190815260200160002060020160070154145b5b1561c5a461d4b1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c60557808201518184015260208101905061c5ea565b50505050905090810190601f16801561c6325780820380516001836020036101000a031916815260200191505b508481038352603081526020018061dfd5603091396040018481038252603081526020018061e37c603091396040019550505050505060006040518083038186803b15801561c68057600080fd5b505af415801561c694573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461c6db61d4ee565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c73c57808201518184015260208101905061c721565b50505050905090810190601f16801561c7695780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e24d603091396040018481038252603681526020018061e346603691396040019550505050505060006040518083038186803b15801561c7b757600080fd5b505af415801561c7cb573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561c800576000600e60006101000a81548160ff0219169083151502179055505b60008b8b604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061c83f8a8a8a8a61d52b565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561c8fc57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061ca3292919061d8ad565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a600083815260200190815260200160002060070160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b600080600080600060036000016000888152602001908152602001600020602f0160009054906101000a900460ff161561cc4e5785945085935060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b600060036000016000838152602001908152602001600020602f0160009054906101000a900460ff169050919050565b6000600e60009054906101000a900460ff161561ccbb576000600e60006101000a81548160ff0219169083151502179055505b61ccc361d79d565b905060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461cd00578361cd24565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905060008184604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506008600001600082815260200190815260200160002060030160009054906101000a900460ff161561cdbe57829250505061d00b565b600015158273ffffffffffffffffffffffffffffffffffffffff16637180f973866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561ce1357600080fd5b505afa15801561ce27573d6000803e3d6000fd5b505050506040513d602081101561ce3d57600080fd5b81019080805190602001909291905050501515141561ce675761ce5e61d7b0565b9250505061d00b565b60086001018190806001815401808255809150509060018203906000526020600020016000909192909190915055600860000160008381526020019081526020016000206000018190555060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001858152506008600001600083815260200190815260200160002060010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060016008600001600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f71e1caf18038ec62cce99f19463f24d1083d26dd1fcc8a956a1821c9f07fbc1c3086604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a250505b92915050565b6000600160026003811061d02157fe5b602091828204019190069054906101000a900460ff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561d0b061d7ce565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561d11157808201518184015260208101905061d0f6565b50505050905090810190601f16801561d13e5780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561d1c657600080fd5b505af415801561d1da573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461d23061d6e6565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561d29157808201518184015260208101905061d276565b50505050905090810190601f16801561d2be5780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f776e65642e7472616e736665724f776e6572736869700000000000000000008152506020018481038252601e8152602001807f546865206e6577206f776e6572206d757374206e6f74206265204e554c4c00008152506020019550505050505060006040518083038186803b15801561d34657600080fd5b505af415801561d35a573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461d4ae5780600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c8600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b61d53361db7a565b61d53b61dbbf565b60405180608001604052808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090508082600001819052508260ff16600581111561d58f57fe5b8260200190600581111561d59f57fe5b9081600581111561d5ac57fe5b8152505050949350505050565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b600061d6248360006003811061d60857fe5b60200201518360006003811061d61a57fe5b602002015161d80b565b90506000811461d6365780905061d6a3565b61d6628360016003811061d64657fe5b60200201518360016003811061d65857fe5b602002015161d80b565b90506000811461d6745780905061d6a3565b61d6a08360026003811061d68457fe5b60200201518360026003811061d69657fe5b602002015161d80b565b90505b92915050565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60006103ea905090565b60006103e9905090565b6000610bb9905090565b6000610bba905090565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60008260ff168260ff16141561d824576000905061d85f565b8260ff168260ff16101561d85a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061d85f565b600190505b92915050565b50805460018160011615610100020316600290046000825580601f1061d88b575061d8aa565b601f01602090049060005260206000209081019061d8a9919061dc05565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061d8ee57805160ff191683800117855561d91c565b8280016001018555821561d91c579182015b8281111561d91b57825182559160200191906001019061d900565b5b50905061d929919061dc05565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061d96e57803560ff191683800117855561d99c565b8280016001018555821561d99c579182015b8281111561d99b57823582559160200191906001019061d980565b5b50905061d9a9919061dc05565b5090565b604051806101c00160405280600080191681526020016000600181111561d9d057fe5b81526020016000600381111561d9e257fe5b81526020016000600281111561d9f457fe5b81526020016000801916815260200160001515815260200160008019168152602001600080191681526020016000801916815260200160008019168152602001600080191681526020016060815260200160608152602001606081525090565b6040518060e00160405280600080191681526020016000600181111561da7657fe5b81526020016000600181111561da8857fe5b815260200161da9561dc2a565b815260200161daa261dc8f565b815260200160008019168152602001600080191681525090565b6040518060a00160405280600080191681526020016000600281111561dade57fe5b81526020016000801916815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b604051806060016040528061db3161dc8f565b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b604051806080016040528061db8d61dc8f565b81526020016000600581111561db9f57fe5b815260200161dbac61dc8f565b815260200161dbb961dc2a565b81525090565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b61dc2791905b8082111561dc2357600081600090555060010161dc0b565b5090565b90565b604051806101000160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016000815260200160008152602001606081526020016000151581526020016000151581525090565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509056fe5468652074617267657420656c656d656e74202861637469766974797c676174657761792920646f6573206e6f7420657869737443616e6e6f74206372656174652064617461206d617070696e672073696e636520676976656e206163746976697479496420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e4143544956495459416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a65477261706820656c656d656e742077697468205f696420616c7265616479206578697374734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e67207072656465636573736f72206f6620616e20616374697669747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a656443616e6e6f742063726561746520626f756e64617279206576656e742073696e636520676976656e206163746976697479496420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e41435449564954594e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e67207072656465636573736f72206f6620616e20696e7465726d656469617465206576656e7450726f63657373446566696e6974696f6e2e6372656174655472616e736974696f6e416374696f6e2066756e6374696f6e20706172616d65746572206d757374206e6f7420626520656d70747944656661756c7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e744e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f6620616e20696e7465726d656469617465206576656e7450726f63657373446566696e6974696f6e2e7072655f676174657761794f75745472616e736974696f6e457869737473556e6b6e6f776e2f556e737570706f727465642042706d4d6f64656c2e4d6f64656c456c656d656e745479706520666f7220736f7572636520656c656d656e74477261706820656c656d656e7420776974682067656e657261746564206576656e744964203d20285f616374697669747949642c5f69642920616c72656164792065786973747320696e207468652070726f636573734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f6620616e206163746976697479456974686572206120436f6e646974696f6e616c4461746120287669612061205f64617461506174682061742061206d696e696d756d29206f722061205f6669786564457363616c6174696f6e54617274676574206d7573742062652070726f766964656444656661756c7450726f63657373446566696e6974696f6e2e637265617465446174614d617070696e6744656661756c7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e74416374696f6e43616e6e6f742061646420626f756e64617279206576656e7420616374696f6e2073696e63652074686520676976656e20494420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e424f554e444152595f4556454e5450726f63657373446566696e6974696f6e2e637265617465496e7465726d6564696174654576656e7450726f63657373446566696e6974696f6e2e7072655f7461726765744e6f7444656661756c745472616e736974696f6e477261706820656c656d656e74207769746820676976656e204944206e6f7420666f756e64556e6b6e6f776e2f556e737570706f727465642042706d4d6f64656c2e4d6f64656c456c656d656e745479706520666f722074617267657420656c656d656e744e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f66206120626f756e64617279206576656e7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e745468652074617267657420656c656d656e7420697320746865206761746577617927732064656661756c74207472616e736974696f6e4e6f207472616e736974696f6e20666f756e64206265747765656e206761746577617920616e64206163746976697479a265627a7a72315820d45aa2d14d3fa7a1862c28c95903786f3f44f4901bdb23cd70985ba5be9ff08364736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$d688d3e5094c429bbf767db5b46e89d18f$", bpm_model_BpmModelLib_sol_BpmModelLib);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        bytecode = Replace(bytecode, "$64db665dd301bb0cc2cc68502a9bd7c360$", commons_utils_TypeUtilsLib_sol_TypeUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActivityDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActivityDefinitionCreation", this.address, callback); }
        LogDataMappingCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataMappingCreation", this.address, callback); }
        LogOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOwnerChanged", this.address, callback); }
        LogProcessDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionCreation", this.address, callback); }
        LogProcessDefinitionInterfaceIdUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionInterfaceIdUpdate", this.address, callback); }
        LogTimerEventDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogTimerEventDefinitionCreation", this.address, callback); }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_ID_ACTIVITY_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_ACTIVITY_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ACTIVITY_DEFINITIONS();
            });
        }
        EVENT_ID_DATA_MAPPINGS() {
            const data = Encode(this.client).EVENT_ID_DATA_MAPPINGS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_MAPPINGS();
            });
        }
        EVENT_ID_PROCESS_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_PROCESS_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_PROCESS_DEFINITIONS();
            });
        }
        EVENT_ID_TIMER_EVENT_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_TIMER_EVENT_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_TIMER_EVENT_DEFINITIONS();
            });
        }
        addBoundaryEvent(_activityId: Buffer, _id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) {
            const data = Encode(this.client).addBoundaryEvent(_activityId, _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant);
            return Call<Tx, {
                eventId: Buffer;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addBoundaryEvent();
            });
        }
        addBoundaryEventAction(_id: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _fixedTarget: string, _actionFunction: string) {
            const data = Encode(this.client).addBoundaryEventAction(_id, _dataPath, _dataStorageId, _dataStorage, _fixedTarget, _actionFunction);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addBoundaryEventAction();
            });
        }
        addProcessInterfaceImplementation(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).addProcessInterfaceImplementation(_model, _interfaceId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addProcessInterfaceImplementation();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createActivityDefinition(_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) {
            const data = Encode(this.client).createActivityDefinition(_id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createActivityDefinition();
            });
        }
        createDataMapping(_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).createDataMapping(_activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createDataMapping();
            });
        }
        createGateway(_id: Buffer, _type: number) {
            const data = Encode(this.client).createGateway(_id, _type);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createGateway();
            });
        }
        createIntermediateEvent(_id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) {
            const data = Encode(this.client).createIntermediateEvent(_id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createIntermediateEvent();
            });
        }
        createTransition(_source: Buffer, _target: Buffer) {
            const data = Encode(this.client).createTransition(_source, _target);
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransition();
            });
        }
        createTransitionConditionForAddress(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForAddress(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForAddress();
            });
        }
        createTransitionConditionForBool(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) {
            const data = Encode(this.client).createTransitionConditionForBool(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBool();
            });
        }
        createTransitionConditionForBytes32(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) {
            const data = Encode(this.client).createTransitionConditionForBytes32(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBytes32();
            });
        }
        createTransitionConditionForDataStorage(_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) {
            const data = Encode(this.client).createTransitionConditionForDataStorage(_gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForDataStorage();
            });
        }
        createTransitionConditionForInt(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForInt(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForInt();
            });
        }
        createTransitionConditionForString(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForString(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForString();
            });
        }
        createTransitionConditionForUint(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForUint(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForUint();
            });
        }
        getActivitiesForParticipant(_participantId: Buffer) {
            const data = Encode(this.client).getActivitiesForParticipant(_participantId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivitiesForParticipant();
            });
        }
        getActivityAtIndex(_index: number) {
            const data = Encode(this.client).getActivityAtIndex(_index);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityAtIndex();
            });
        }
        getActivityData(_id: Buffer) {
            const data = Encode(this.client).getActivityData(_id);
            return Call<Tx, {
                activityType: number;
                taskType: number;
                taskBehavior: number;
                assignee: Buffer;
                multiInstance: boolean;
                application: Buffer;
                subProcessModelId: Buffer;
                subProcessDefinitionId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityData();
            });
        }
        getActivityGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getActivityGraphDetails(_id);
            return Call<Tx, {
                predecessor: Buffer;
                successor: Buffer;
                boundaryEventIds: Buffer[];
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityGraphDetails();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getBoundaryEventGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getBoundaryEventGraphDetails(_id);
            return Call<Tx, {
                eventType: number;
                eventBehavior: number;
                successor: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getBoundaryEventGraphDetails();
            });
        }
        getElementType(_id: Buffer) {
            const data = Encode(this.client).getElementType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getElementType();
            });
        }
        getGatewayGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getGatewayGraphDetails(_id);
            return Call<Tx, {
                inputs: Buffer[];
                outputs: Buffer[];
                gatewayType: number;
                defaultOutput: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGatewayGraphDetails();
            });
        }
        getId() {
            const data = Encode(this.client).getId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getId();
            });
        }
        getImplementedProcessInterfaceAtIndex(_idx: number) {
            const data = Encode(this.client).getImplementedProcessInterfaceAtIndex(_idx);
            return Call<Tx, {
                modelAddress: string;
                interfaceId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getImplementedProcessInterfaceAtIndex();
            });
        }
        getInDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getInDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingDetails();
            });
        }
        getInDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getInDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingIdAtIndex();
            });
        }
        getInDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getInDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingKeys();
            });
        }
        getIntermediateEventGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getIntermediateEventGraphDetails(_id);
            return Call<Tx, {
                eventType: number;
                eventBehavior: number;
                predecessor: Buffer;
                successor: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getIntermediateEventGraphDetails();
            });
        }
        getModel() {
            const data = Encode(this.client).getModel();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModel();
            });
        }
        getModelId() {
            const data = Encode(this.client).getModelId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModelId();
            });
        }
        getNumberOfActivities() {
            const data = Encode(this.client).getNumberOfActivities();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfActivities();
            });
        }
        getNumberOfImplementedProcessInterfaces() {
            const data = Encode(this.client).getNumberOfImplementedProcessInterfaces();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfImplementedProcessInterfaces();
            });
        }
        getNumberOfInDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfInDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfInDataMappings();
            });
        }
        getNumberOfOutDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfOutDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfOutDataMappings();
            });
        }
        getOutDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getOutDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingDetails();
            });
        }
        getOutDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getOutDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingIdAtIndex();
            });
        }
        getOutDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getOutDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingKeys();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getStartActivity() {
            const data = Encode(this.client).getStartActivity();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getStartActivity();
            });
        }
        getTimerEventDetails(_id: Buffer) {
            const data = Encode(this.client).getTimerEventDetails(_id);
            return Call<Tx, {
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
                timestampConstant: number;
                durationConstant: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getTimerEventDetails();
            });
        }
        implementsProcessInterface(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).implementsProcessInterface(_model, _interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).implementsProcessInterface();
            });
        }
        initialize(_id: Buffer, _model: string) {
            const data = Encode(this.client).initialize(_id, _model);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        isValid() {
            const data = Encode(this.client).isValid();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isValid();
            });
        }
        modelElementExists(_id: Buffer) {
            const data = Encode(this.client).modelElementExists(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).modelElementExists();
            });
        }
        resolveTransitionCondition(_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveTransitionCondition(_sourceId, _targetId, _dataStorage);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveTransitionCondition();
            });
        }
        setDefaultTransition(_gatewayId: Buffer, _targetElementId: Buffer) {
            const data = Encode(this.client).setDefaultTransition(_gatewayId, _targetElementId);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDefaultTransition();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferOwnership(_newOwner: string) {
            const data = Encode(this.client).transferOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferOwnership();
            });
        }
        validate() {
            const data = Encode(this.client).validate();
            return Call<Tx, [boolean, Buffer]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).validate();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_ID_ACTIVITY_DEFINITIONS: () => { return client.encode("AF201B90", []); },
        EVENT_ID_DATA_MAPPINGS: () => { return client.encode("6983067E", []); },
        EVENT_ID_PROCESS_DEFINITIONS: () => { return client.encode("BA840F64", []); },
        EVENT_ID_TIMER_EVENT_DEFINITIONS: () => { return client.encode("9CB85F60", []); },
        addBoundaryEvent: (_activityId: Buffer, _id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) => { return client.encode("581654CE", ["bytes32", "bytes32", "uint8", "uint8", "bytes32", "bytes32", "address", "uint256", "string"], _activityId, _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant); },
        addBoundaryEventAction: (_id: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _fixedTarget: string, _actionFunction: string) => { return client.encode("89A392E6", ["bytes32", "bytes32", "bytes32", "address", "address", "string"], _id, _dataPath, _dataStorageId, _dataStorage, _fixedTarget, _actionFunction); },
        addProcessInterfaceImplementation: (_model: string, _interfaceId: Buffer) => { return client.encode("F001897D", ["address", "bytes32"], _model, _interfaceId); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createActivityDefinition: (_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) => { return client.encode("BDE6EF58", ["bytes32", "uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"], _id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId); },
        createDataMapping: (_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("C5930E29", ["bytes32", "uint8", "bytes32", "bytes32", "bytes32", "address"], _activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage); },
        createGateway: (_id: Buffer, _type: number) => { return client.encode("32D37781", ["bytes32", "uint8"], _id, _type); },
        createIntermediateEvent: (_id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) => { return client.encode("D1CC1BDE", ["bytes32", "uint8", "uint8", "bytes32", "bytes32", "address", "uint256", "string"], _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant); },
        createTransition: (_source: Buffer, _target: Buffer) => { return client.encode("6C28E102", ["bytes32", "bytes32"], _source, _target); },
        createTransitionConditionForAddress: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("DD2F3E84", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "address"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBool: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) => { return client.encode("3D34113E", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bool"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBytes32: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) => { return client.encode("23FF5DD3", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForDataStorage: (_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) => { return client.encode("B2816749", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32", "bytes32", "address"], _gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage); },
        createTransitionConditionForInt: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("26417651", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "int256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForString: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("8EFB695C", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "string"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForUint: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("5316C206", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "uint256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        getActivitiesForParticipant: (_participantId: Buffer) => { return client.encode("14E42605", ["bytes32"], _participantId); },
        getActivityAtIndex: (_index: number) => { return client.encode("3BF2C2A0", ["uint256"], _index); },
        getActivityData: (_id: Buffer) => { return client.encode("758CBD2E", ["bytes32"], _id); },
        getActivityGraphDetails: (_id: Buffer) => { return client.encode("5B4025E1", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getBoundaryEventGraphDetails: (_id: Buffer) => { return client.encode("57CFEF6C", ["bytes32"], _id); },
        getElementType: (_id: Buffer) => { return client.encode("9C4AA334", ["bytes32"], _id); },
        getGatewayGraphDetails: (_id: Buffer) => { return client.encode("79238A10", ["bytes32"], _id); },
        getId: () => { return client.encode("5D1CA631", []); },
        getImplementedProcessInterfaceAtIndex: (_idx: number) => { return client.encode("4B53BE1D", ["uint256"], _idx); },
        getInDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("E3621D20", ["bytes32", "bytes32"], _activityId, _id); },
        getInDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("15064393", ["bytes32", "uint256"], _activityId, _idx); },
        getInDataMappingKeys: (_activityId: Buffer) => { return client.encode("3D9A2352", ["bytes32"], _activityId); },
        getIntermediateEventGraphDetails: (_id: Buffer) => { return client.encode("48191A40", ["bytes32"], _id); },
        getModel: () => { return client.encode("A0BFA1E0", []); },
        getModelId: () => { return client.encode("361A5672", []); },
        getNumberOfActivities: () => { return client.encode("006129D9", []); },
        getNumberOfImplementedProcessInterfaces: () => { return client.encode("B24B4BCC", []); },
        getNumberOfInDataMappings: (_activityId: Buffer) => { return client.encode("2B8C74CE", ["bytes32"], _activityId); },
        getNumberOfOutDataMappings: (_activityId: Buffer) => { return client.encode("AE73D8B3", ["bytes32"], _activityId); },
        getOutDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("3A70DCEF", ["bytes32", "bytes32"], _activityId, _id); },
        getOutDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("3796D3A4", ["bytes32", "uint256"], _activityId, _idx); },
        getOutDataMappingKeys: (_activityId: Buffer) => { return client.encode("08A104AA", ["bytes32"], _activityId); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getStartActivity: () => { return client.encode("0F9C79E2", []); },
        getTimerEventDetails: (_id: Buffer) => { return client.encode("20DE4E0A", ["bytes32"], _id); },
        implementsProcessInterface: (_model: string, _interfaceId: Buffer) => { return client.encode("77198ED4", ["address", "bytes32"], _model, _interfaceId); },
        initialize: (_id: Buffer, _model: string) => { return client.encode("6910E334", ["bytes32", "address"], _id, _model); },
        isValid: () => { return client.encode("BB5D40EB", []); },
        modelElementExists: (_id: Buffer) => { return client.encode("E3C83A16", ["bytes32"], _id); },
        resolveTransitionCondition: (_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) => { return client.encode("5478A0C9", ["bytes32", "bytes32", "address"], _sourceId, _targetId, _dataStorage); },
        setDefaultTransition: (_gatewayId: Buffer, _targetElementId: Buffer) => { return client.encode("21A0C66F", ["bytes32", "bytes32"], _gatewayId, _targetElementId); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferOwnership: (_newOwner: string) => { return client.encode("F2FDE38B", ["address"], _newOwner); },
        validate: () => { return client.encode("6901F668", []); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_ID_ACTIVITY_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_MAPPINGS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_PROCESS_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_TIMER_EVENT_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addBoundaryEvent: (): {
            eventId: Buffer;
        } => {
            const [eventId] = client.decode(data, ["bytes32"]);
            return { eventId: eventId };
        },
        addBoundaryEventAction: (): void => { return; },
        addProcessInterfaceImplementation: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createActivityDefinition: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        createDataMapping: (): void => { return; },
        createGateway: (): void => { return; },
        createIntermediateEvent: (): void => { return; },
        createTransition: (): [number] => { return client.decode(data, ["uint256"]); },
        createTransitionConditionForAddress: (): void => { return; },
        createTransitionConditionForBool: (): void => { return; },
        createTransitionConditionForBytes32: (): void => { return; },
        createTransitionConditionForDataStorage: (): void => { return; },
        createTransitionConditionForInt: (): void => { return; },
        createTransitionConditionForString: (): void => { return; },
        createTransitionConditionForUint: (): void => { return; },
        getActivitiesForParticipant: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getActivityAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getActivityData: (): {
            activityType: number;
            taskType: number;
            taskBehavior: number;
            assignee: Buffer;
            multiInstance: boolean;
            application: Buffer;
            subProcessModelId: Buffer;
            subProcessDefinitionId: Buffer;
        } => {
            const [activityType, taskType, taskBehavior, assignee, multiInstance, application, subProcessModelId, subProcessDefinitionId] = client.decode(data, ["uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"]);
            return { activityType: activityType, taskType: taskType, taskBehavior: taskBehavior, assignee: assignee, multiInstance: multiInstance, application: application, subProcessModelId: subProcessModelId, subProcessDefinitionId: subProcessDefinitionId };
        },
        getActivityGraphDetails: (): {
            predecessor: Buffer;
            successor: Buffer;
            boundaryEventIds: Buffer[];
        } => {
            const [predecessor, successor, boundaryEventIds] = client.decode(data, ["bytes32", "bytes32", "bytes32[]"]);
            return { predecessor: predecessor, successor: successor, boundaryEventIds: boundaryEventIds };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getBoundaryEventGraphDetails: (): {
            eventType: number;
            eventBehavior: number;
            successor: Buffer;
        } => {
            const [eventType, eventBehavior, successor] = client.decode(data, ["uint8", "uint8", "bytes32"]);
            return { eventType: eventType, eventBehavior: eventBehavior, successor: successor };
        },
        getElementType: (): [number] => { return client.decode(data, ["uint8"]); },
        getGatewayGraphDetails: (): {
            inputs: Buffer[];
            outputs: Buffer[];
            gatewayType: number;
            defaultOutput: Buffer;
        } => {
            const [inputs, outputs, gatewayType, defaultOutput] = client.decode(data, ["bytes32[]", "bytes32[]", "uint8", "bytes32"]);
            return { inputs: inputs, outputs: outputs, gatewayType: gatewayType, defaultOutput: defaultOutput };
        },
        getId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getImplementedProcessInterfaceAtIndex: (): {
            modelAddress: string;
            interfaceId: Buffer;
        } => {
            const [modelAddress, interfaceId] = client.decode(data, ["address", "bytes32"]);
            return { modelAddress: modelAddress, interfaceId: interfaceId };
        },
        getInDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getInDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getInDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getIntermediateEventGraphDetails: (): {
            eventType: number;
            eventBehavior: number;
            predecessor: Buffer;
            successor: Buffer;
        } => {
            const [eventType, eventBehavior, predecessor, successor] = client.decode(data, ["uint8", "uint8", "bytes32", "bytes32"]);
            return { eventType: eventType, eventBehavior: eventBehavior, predecessor: predecessor, successor: successor };
        },
        getModel: (): [string] => { return client.decode(data, ["address"]); },
        getModelId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getNumberOfActivities: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfImplementedProcessInterfaces: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfInDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfOutDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOutDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getOutDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getOutDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getStartActivity: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getTimerEventDetails: (): {
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
            timestampConstant: number;
            durationConstant: string;
        } => {
            const [dataPath, dataStorageId, dataStorage, timestampConstant, durationConstant] = client.decode(data, ["bytes32", "bytes32", "address", "uint256", "string"]);
            return { dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage, timestampConstant: timestampConstant, durationConstant: durationConstant };
        },
        implementsProcessInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        initialize: (): void => { return; },
        isValid: (): [boolean] => { return client.decode(data, ["bool"]); },
        modelElementExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        resolveTransitionCondition: (): [boolean] => { return client.decode(data, ["bool"]); },
        setDefaultTransition: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferOwnership: (): void => { return; },
        validate: (): [boolean, Buffer] => { return client.decode(data, ["bool", "bytes32"]); }
    }; };
}